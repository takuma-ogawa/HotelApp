{"remainingRequest":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\src\\pages\\MasterDestination.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\src\\pages\\MasterDestination.vue","mtime":1604504586800},{"path":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// @ is an alias to /src\nimport Card from '@/components/Card/Card.vue'\nimport arrayFunction from '@/js/array.js'\nimport url from '@/js/api_url.js'\n\nexport default {\n    name: 'niukeSyukei',\n    components: {\n        Card\n    },\n    data: function () {\n        return {\n            data: {\n                companyID: \"\",\n                //新規作成のIDは-1ととりあえず置いておく\n                //CRUDKeyは0が何もなし、1が編集,2が削除,3が新規\n                newID: -1,\n                search: {\n                    model: {\n                        memberName: \"\"\n                    },\n                    validation: {\n                        Name: [\n                            { required: true, message: '行先名が入力されていません', trigger: 'blur' },\n                        ],\n                    }\n                },\n                master: {\n                    model: {\n                        meisai: [],\n                    },\n                },\n                disabled: {\n                    save: false,\n                },\n            },\n        }\n    },\n    methods: {\n        searchName: function () {\n\n            this.$refs['searchForm'].validate((valid) => {\n\n                if (valid) {\n                    \n                    axios.get(url.ApiUrl().DestinationSearch([{ key: \"CompanyID\", value: this.data.companyID }, { key: \"Name\", value: this.data.search.model.Name }]))\n                        .then(response => {\n\n                            console.log(response.data);\n\n                            this.$set(this.data.master.model, \"meisai\", response.data);\n\n                        })\n                        .catch(response => console.log(response))\n\n                }\n            })\n\n\n        },\n        masterCodeOverLap: function (meisai, index) {\n\n            console.log(url.ApiUrl().IsDestinationCodeOverLap([{ key: \"CompanyID\", value: this.data.companyID }, { key: \"DestinationID\", value: meisai.Destination.DestinationID }, { key: \"DestinationCode\", value: meisai.Destination.DestinationCode }]))\n            axios.get(url.ApiUrl().IsDestinationCodeOverLap([{ key: \"CompanyID\", value: this.data.companyID }, { key: \"DestinationID\", value: meisai.Destination.DestinationID }, { key: \"DestinationCode\", value: meisai.Destination.DestinationCode }]))\n                .then(response => {\n                    if (!response.data) {\n\n                        for (var i = 0; i < this.data.master.model.meisai.length; i++) {\n\n                            if (this.data.master.model.meisai[i].Destination.DestinationCode == meisai.Destination.DestinationCode) {\n\n                                if (index != i && this.data.master.model.meisai[i].Crud != 2) {\n\n                                    alert(\"入力されたコードは既に存在します\");\n\n                                    meisai.Destination.DestinationCode = \"\";\n\n                                }\n                            }\n                        }\n\n                    } else {\n\n                        alert(\"入力されたコードは既に存在します\");\n\n                        meisai.Destination.DestinationCode = \"\";\n\n                    }\n\n\n                })\n                .catch(response => console.log(response))\n\n\n            this.changeCrud(meisai, 1);\n        },\n        getDestinations: function () {\n\n            axios.get(url.ApiUrl().GetDestinationsMaster([{ key: \"CompanyID\", value: this.data.companyID }]))\n                .then(response => {\n\n\n                    this.$set(this.data.master.model, \"meisai\", response.data);\n\n                })\n                .catch(response => console.log(response))\n\n\n        },\n        createMeisaiData: function (DestinationID, DestinationCode, DestinationName, IsLongDistance, Crud) {\n\n            return {\n                Destination: {\n                    DestinationID: DestinationID,\n                    DestinationCode: DestinationCode,\n                    DestinationName: DestinationName,\n                    IsLongDistance: IsLongDistance,\n                    CompanyID: this.data.companyID,\n                    EditorID: this.data.editorID,\n\n                },\n                Crud: Crud\n            }\n        },\n        addMeisai: function (DestinationID, DestinationCode, DestinationName, IsLongDistance, Crud) {\n\n            var meisai = this.createMeisaiData(DestinationID, DestinationCode, DestinationName, IsLongDistance, Crud);\n            this.data.master.model.meisai.push(meisai);\n\n            console.log(this.data.master.model.meisai);\n        },\n        removeMeisai: function (meisai, index) {\n\n            if (meisai.Crud == 3) {\n                this.data.master.model.meisai.splice(index, 1);\n            } else {\n\n                this.$set(meisai, 'Crud', 2)\n\n            }\n\n        },\n        changeCrud: function (meisai, value) {\n\n            if (meisai.Crud != 3) {\n\n                this.$set(meisai, 'Crud', value)\n\n            }\n        },\n        changeEditorID: function (meisai) {\n\n            for (var i in meisai) {\n\n                if (meisai[i].Crud != 0) {\n\n                    meisai[i].Destination.EditorID = this.data.editorID;\n                }\n            }\n        },\n        submit: function () {\n\n            this.$refs['masterForm'].validate((valid) => {\n\n                if (valid) {\n\n                    this.changeEditorID(this.data.master.model.meisai);\n\n                    //※axiosによる更新処理\n\n                    this.data.disabled.save = true;\n\n                    axios.post(url.ApiUrl().DestinationsMasterSave(), this.data.master.model.meisai)\n                        .then(response => {\n\n                            if (response.data) {\n\n                                this.$message({\n                                    message: '登録に成功しました',\n                                    type: 'success'\n                                });\n\n                                this.getDestinations();\n\n                            } else {\n\n                                this.$message({\n                                    message: '登録に失敗しました',\n                                    type: 'error'\n                                });\n\n                            }\n\n\n                            this.data.disabled.save = false;\n\n                        })\n                        .catch(response => {\n                            this.$message({\n                                message: '通信に失敗しました',\n                                type: 'error'\n                            });\n\n                            this.data.disabled.save = false;\n\n                        });\n                }\n            })\n\n        }\n    },\n    created: function () {\n        this.data.companyID = this.$store.state.login.companyID;\n        this.data.editorID = this.$store.state.login.userID;\n\n        this.getDestinations();\n\n    },\n    mounted: function () {\n\n\n    },\n    watch: {\n\n    }\n}\n",{"version":3,"sources":["MasterDestination.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA","file":"MasterDestination.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div>\r\n        <el-card>\r\n            <div slot='header'>\r\n                <span>行先マスタ</span>\r\n            </div>\r\n            <div slot='default'>\r\n                <el-form :model=\"data.search.model\" :rules=\"data.search.validation\" ref=\"searchForm\" label-width=\"120px\">\r\n                    <div class=\"row\">\r\n                        <div class='col-3'>\r\n                            <label for='行先検索' class='col-form-label px-1' style='width:100%;'>行先名</label>\r\n                            <el-form-item label-width=\"0\" prop=\"syoriKubun\">\r\n                                <el-input type='text'\r\n                                          style='width:100%;'\r\n                                          v-model=\"data.search.model.Name\"></el-input>\r\n\r\n                            </el-form-item>\r\n                        </div>\r\n                        <div class=\"col-3\">\r\n                            <label for='' class='col-form-label px-1' style='width:100%;'>検索</label>\r\n                            <el-button style='margin-left:2%;' type='warning' icon=\"el-icon-search\" @click=\"searchName\">検索</el-button>\r\n                        </div>\r\n                    </div>\r\n                </el-form>\r\n                <div class=\"row\" style=\"margin-top:4%;\">\r\n                    <div class=\"col-12\">\r\n                        <div style=\"text-align:right;\">\r\n                            <el-button style='margin-left:2%;width:10%;' type='danger' :disabled=\"data.disabled.save\" @click=\"submit\">保存</el-button>\r\n                        </div>\r\n                        <el-form :model=\"data.master.model\" :rules=\"data.master.validation\" ref=\"masterForm\" label-width=\"120px\">\r\n                            <div style=\"text-align:center;\">\r\n                                <el-button type='primary'\r\n                                           style='width:40%;display:inline;'\r\n                                           @click=\"addMeisai(data.newID,'','','',3)\"\r\n                                           :disabled=\"data.disabled.save\">明細を追加</el-button>\r\n                            </div>\r\n                            <table class=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>\r\n\r\n                                        </th>\r\n                                        <th>\r\n                                            行先コード\r\n                                        </th>\r\n                                        <th>\r\n                                            行先名\r\n                                        </th>\r\n                                        <th>\r\n                                            長距離or地場\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tr v-for=\"(meisai_data,index) in data.master.model.meisai\" v-if=\"meisai_data.Crud != 2\">\r\n                                    <td>\r\n                                        <el-button type=\"primary\" name=\"name\" v-on:click=\"removeMeisai(meisai_data,index)\" :disabled=\"data.disabled.save\">削除</el-button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <el-form-item label-width=\"0\"\r\n                                                      :prop=\"'meisai[' + index + '].Destination.DestinationCode'\"\r\n                                                      :rules=\"{\r\n                                                              required: true, message: '行先コードが入力されていません', trigger: 'blur'\r\n                                                              }\">\r\n                                            <el-input type='text'\r\n                                                      style='width:100%;'\r\n                                                      v-model=\"meisai_data.Destination.DestinationCode\"\r\n                                                      @change=\"masterCodeOverLap(meisai_data,index)\"\r\n                                                      :disabled=\"data.disabled.save\"></el-input>\r\n                                        </el-form-item>\r\n                                    </td>\r\n                                    <td>\r\n                                        <el-form-item label-width=\"0\"\r\n                                                      :prop=\"'meisai[' + index + '].Destination.DestinationName'\"\r\n                                                      :rules=\"{\r\n                                                              required: true, message: '行先名が入力されていません', trigger: 'blur'\r\n                                                              }\">\r\n                                            <el-input type='text'\r\n                                                      style='width:100%;'\r\n                                                      v-model=\"meisai_data.Destination.DestinationName\"\r\n                                                      @change=\"changeCrud(meisai_data, 1)\"\r\n                                                      :disabled=\"data.disabled.save\"></el-input>\r\n                                        </el-form-item>\r\n                                    </td>\r\n                                    <td>\r\n                                        <el-form-item label-width=\"0\"\r\n                                                      :prop=\"'meisai[' + index + '].Destination.IsLongDistance'\"\r\n                                                      :rules=\"{\r\n                                                              required: true, message: '長距離or地場が選択されていません', trigger: 'blur'\r\n                                                              }\">\r\n\r\n                                            <el-select name=\"name\" v-model=\"meisai_data.Destination.IsLongDistance\"\r\n                                                       @change=\"changeCrud(meisai_data, 1)\"\r\n                                                       :disabled=\"data.disabled.save\">\r\n                                                <el-option :value=\"false\" label=\"地場\"></el-option>\r\n                                                <el-option :value=\"true\" label=\"長距離\"></el-option>\r\n                                            </el-select>\r\n                                        </el-form-item>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                            <div style=\"text-align:center;\">\r\n                                <el-button type='primary'\r\n                                           style='width:40%;display:inline;'\r\n                                           @click=\"addMeisai(data.newID,'','','',3)\"\r\n                                           :disabled=\"data.disabled.save\">明細を追加</el-button>\r\n                            </div>\r\n                        </el-form>\r\n                        <div style=\"text-align:right;\">\r\n                            <el-button style='margin-left:2%;width:10%;' type='danger' :disabled=\"data.disabled.save\" @click=\"submit\">保存</el-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    // @ is an alias to /src\r\n    import Card from '@/components/Card/Card.vue'\r\n    import arrayFunction from '@/js/array.js'\r\n    import url from '@/js/api_url.js'\r\n\r\n    export default {\r\n        name: 'niukeSyukei',\r\n        components: {\r\n            Card\r\n        },\r\n        data: function () {\r\n            return {\r\n                data: {\r\n                    companyID: \"\",\r\n                    //新規作成のIDは-1ととりあえず置いておく\r\n                    //CRUDKeyは0が何もなし、1が編集,2が削除,3が新規\r\n                    newID: -1,\r\n                    search: {\r\n                        model: {\r\n                            memberName: \"\"\r\n                        },\r\n                        validation: {\r\n                            Name: [\r\n                                { required: true, message: '行先名が入力されていません', trigger: 'blur' },\r\n                            ],\r\n                        }\r\n                    },\r\n                    master: {\r\n                        model: {\r\n                            meisai: [],\r\n                        },\r\n                    },\r\n                    disabled: {\r\n                        save: false,\r\n                    },\r\n                },\r\n            }\r\n        },\r\n        methods: {\r\n            searchName: function () {\r\n\r\n                this.$refs['searchForm'].validate((valid) => {\r\n\r\n                    if (valid) {\r\n                        \r\n                        axios.get(url.ApiUrl().DestinationSearch([{ key: \"CompanyID\", value: this.data.companyID }, { key: \"Name\", value: this.data.search.model.Name }]))\r\n                            .then(response => {\r\n\r\n                                console.log(response.data);\r\n\r\n                                this.$set(this.data.master.model, \"meisai\", response.data);\r\n\r\n                            })\r\n                            .catch(response => console.log(response))\r\n\r\n                    }\r\n                })\r\n\r\n\r\n            },\r\n            masterCodeOverLap: function (meisai, index) {\r\n\r\n                console.log(url.ApiUrl().IsDestinationCodeOverLap([{ key: \"CompanyID\", value: this.data.companyID }, { key: \"DestinationID\", value: meisai.Destination.DestinationID }, { key: \"DestinationCode\", value: meisai.Destination.DestinationCode }]))\r\n                axios.get(url.ApiUrl().IsDestinationCodeOverLap([{ key: \"CompanyID\", value: this.data.companyID }, { key: \"DestinationID\", value: meisai.Destination.DestinationID }, { key: \"DestinationCode\", value: meisai.Destination.DestinationCode }]))\r\n                    .then(response => {\r\n                        if (!response.data) {\r\n\r\n                            for (var i = 0; i < this.data.master.model.meisai.length; i++) {\r\n\r\n                                if (this.data.master.model.meisai[i].Destination.DestinationCode == meisai.Destination.DestinationCode) {\r\n\r\n                                    if (index != i && this.data.master.model.meisai[i].Crud != 2) {\r\n\r\n                                        alert(\"入力されたコードは既に存在します\");\r\n\r\n                                        meisai.Destination.DestinationCode = \"\";\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            alert(\"入力されたコードは既に存在します\");\r\n\r\n                            meisai.Destination.DestinationCode = \"\";\r\n\r\n                        }\r\n\r\n\r\n                    })\r\n                    .catch(response => console.log(response))\r\n\r\n\r\n                this.changeCrud(meisai, 1);\r\n            },\r\n            getDestinations: function () {\r\n\r\n                axios.get(url.ApiUrl().GetDestinationsMaster([{ key: \"CompanyID\", value: this.data.companyID }]))\r\n                    .then(response => {\r\n\r\n\r\n                        this.$set(this.data.master.model, \"meisai\", response.data);\r\n\r\n                    })\r\n                    .catch(response => console.log(response))\r\n\r\n\r\n            },\r\n            createMeisaiData: function (DestinationID, DestinationCode, DestinationName, IsLongDistance, Crud) {\r\n\r\n                return {\r\n                    Destination: {\r\n                        DestinationID: DestinationID,\r\n                        DestinationCode: DestinationCode,\r\n                        DestinationName: DestinationName,\r\n                        IsLongDistance: IsLongDistance,\r\n                        CompanyID: this.data.companyID,\r\n                        EditorID: this.data.editorID,\r\n\r\n                    },\r\n                    Crud: Crud\r\n                }\r\n            },\r\n            addMeisai: function (DestinationID, DestinationCode, DestinationName, IsLongDistance, Crud) {\r\n\r\n                var meisai = this.createMeisaiData(DestinationID, DestinationCode, DestinationName, IsLongDistance, Crud);\r\n                this.data.master.model.meisai.push(meisai);\r\n\r\n                console.log(this.data.master.model.meisai);\r\n            },\r\n            removeMeisai: function (meisai, index) {\r\n\r\n                if (meisai.Crud == 3) {\r\n                    this.data.master.model.meisai.splice(index, 1);\r\n                } else {\r\n\r\n                    this.$set(meisai, 'Crud', 2)\r\n\r\n                }\r\n\r\n            },\r\n            changeCrud: function (meisai, value) {\r\n\r\n                if (meisai.Crud != 3) {\r\n\r\n                    this.$set(meisai, 'Crud', value)\r\n\r\n                }\r\n            },\r\n            changeEditorID: function (meisai) {\r\n\r\n                for (var i in meisai) {\r\n\r\n                    if (meisai[i].Crud != 0) {\r\n\r\n                        meisai[i].Destination.EditorID = this.data.editorID;\r\n                    }\r\n                }\r\n            },\r\n            submit: function () {\r\n\r\n                this.$refs['masterForm'].validate((valid) => {\r\n\r\n                    if (valid) {\r\n\r\n                        this.changeEditorID(this.data.master.model.meisai);\r\n\r\n                        //※axiosによる更新処理\r\n\r\n                        this.data.disabled.save = true;\r\n\r\n                        axios.post(url.ApiUrl().DestinationsMasterSave(), this.data.master.model.meisai)\r\n                            .then(response => {\r\n\r\n                                if (response.data) {\r\n\r\n                                    this.$message({\r\n                                        message: '登録に成功しました',\r\n                                        type: 'success'\r\n                                    });\r\n\r\n                                    this.getDestinations();\r\n\r\n                                } else {\r\n\r\n                                    this.$message({\r\n                                        message: '登録に失敗しました',\r\n                                        type: 'error'\r\n                                    });\r\n\r\n                                }\r\n\r\n\r\n                                this.data.disabled.save = false;\r\n\r\n                            })\r\n                            .catch(response => {\r\n                                this.$message({\r\n                                    message: '通信に失敗しました',\r\n                                    type: 'error'\r\n                                });\r\n\r\n                                this.data.disabled.save = false;\r\n\r\n                            });\r\n                    }\r\n                })\r\n\r\n            }\r\n        },\r\n        created: function () {\r\n            this.data.companyID = this.$store.state.login.companyID;\r\n            this.data.editorID = this.$store.state.login.userID;\r\n\r\n            this.getDestinations();\r\n\r\n        },\r\n        mounted: function () {\r\n\r\n\r\n        },\r\n        watch: {\r\n\r\n        }\r\n    }\r\n</script>\r\n"]}]}