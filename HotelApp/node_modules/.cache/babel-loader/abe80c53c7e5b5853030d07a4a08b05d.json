{"remainingRequest":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\src\\js\\status\\time.js","dependencies":[{"path":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\src\\js\\status\\time.js","mtime":1603336365401},{"path":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"C:/Users/takum/Documents/hokuriku_tosbac/HotelApp/project/HotelApp/HotelApp/node_modules/@babel/runtime/helpers/esm/typeof\";\nexport default {\n  filling_zero: function filling_zero(time) {\n    if (time < 10) {\n      var zero_time = \"0\" + String(time);\n    } else {\n      var zero_time = String(time);\n    }\n\n    return zero_time;\n  },\n  time_edit: function time_edit(time_, param) {\n    if (_typeof(time_) == \"object\") {\n      var time = time_;\n    } else if (typeof time_ == \"string\") {\n      var time = new Date(time_);\n    }\n\n    var time_edit_year = String(time.getFullYear());\n    var time_edit_month = this.filling_zero(time.getMonth() + 1);\n    var time_edit_day = this.filling_zero(time.getDate());\n    var time_edit_hour = this.filling_zero(time.getHours());\n    var time_edit_minutes = this.filling_zero(time.getMinutes());\n\n    if (param == 1) {\n      var time_edit = time_edit_year + \"-\" + time_edit_month + \"-\" + time_edit_day + \"T\" + time_edit_hour + \":\" + time_edit_minutes + \":00\";\n    } else if (param == 2) {\n      var time_edit = time_edit_month + \"/\" + time_edit_day + \"　\" + time_edit_hour + \":\" + time_edit_minutes;\n    } else if (param == 3) {\n      var time_edit = time_edit_hour + \":\" + time_edit_minutes;\n    } else if (param == 4) {\n      var time_edit = time_edit_year + \"-\" + time_edit_month + \"-\" + time_edit_day;\n    } else if (param == 5) {\n      var time_edit = time_edit_year + \"/\" + time_edit_month + \"/\" + time_edit_day;\n    } else if (param == 6) {\n      var time_edit = time_edit_year + \"年\" + time_edit_month + \"月\" + time_edit_day + \"日\";\n    }\n\n    return time_edit;\n  },\n  compareDate: function compareDate(startDate, endDate) {\n    if (new Date(startDate).getTime() <= new Date(endDate).getTime()) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n  nowJapanDate: function nowJapanDate() {\n    return new Date(new Date().toLocaleString({\n      timeZone: 'Asia/Tokyo'\n    }));\n  },\n  nowJapanDateJapaStyle: function nowJapanDateJapaStyle() {\n    var japan_date = this.nowJapanDate();\n    return this.time_edit(japan_date, 6);\n  },\n  nowJapanDateInput: function nowJapanDateInput() {\n    var japan_date = this.nowJapanDate();\n    return this.time_edit(japan_date, 4);\n  },\n  nowJapanYear: function nowJapanYear() {\n    var date_string = new Date().toLocaleString({\n      timeZone: 'Asia/Tokyo'\n    });\n    var japan_date = new Date(date_string);\n\n    if (japan_date.getMonth() + 1 <= 3 && japan_date.getDate() <= 31) {\n      return japan_date.getFullYear() - 1;\n    } else {\n      return japan_date.getFullYear();\n    }\n  },\n  JapanYear: function JapanYear(input_date) {\n    var japan_date = input_date;\n\n    if (japan_date.getMonth() + 1 <= 3 && japan_date.getDate() <= 31) {\n      return japan_date.getFullYear() - 1;\n    } else {\n      return japan_date.getFullYear();\n    }\n  }\n};",{"version":3,"sources":["C:\\Users\\takum\\Documents\\hokuriku_tosbac\\HotelApp\\project\\HotelApp\\HotelApp\\src\\js\\status\\time.js"],"names":["filling_zero","time","zero_time","String","time_edit","time_","param","Date","time_edit_year","getFullYear","time_edit_month","getMonth","time_edit_day","getDate","time_edit_hour","getHours","time_edit_minutes","getMinutes","compareDate","startDate","endDate","getTime","nowJapanDate","toLocaleString","timeZone","nowJapanDateJapaStyle","japan_date","nowJapanDateInput","nowJapanYear","date_string","JapanYear","input_date"],"mappings":"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","sourcesContent":["export default {\r\n\r\n    filling_zero: function (time) {\r\n\r\n        if (time < 10) {\r\n            var zero_time = \"0\" + String(time);\r\n        } else {\r\n            var zero_time = String(time);\r\n        }\r\n        return zero_time;\r\n\r\n    },\r\n    time_edit: function (time_, param) {\r\n\r\n\r\n        if (typeof time_ == \"object\") {\r\n            var time = time_;\r\n\r\n        } else if (typeof time_ == \"string\") {\r\n            var time = new Date(time_);\r\n        }\r\n\r\n        var time_edit_year = String(time.getFullYear());\r\n        var time_edit_month = this.filling_zero(time.getMonth() + 1);\r\n        var time_edit_day = this.filling_zero(time.getDate());\r\n        var time_edit_hour = this.filling_zero(time.getHours());\r\n        var time_edit_minutes = this.filling_zero(time.getMinutes());\r\n\r\n        if (param == 1) {\r\n            var time_edit = time_edit_year + \"-\" + time_edit_month + \"-\" + time_edit_day + \"T\" + time_edit_hour + \":\" + time_edit_minutes + \":00\";\r\n        } else if (param == 2) {\r\n\r\n            var time_edit = time_edit_month + \"/\" + time_edit_day + \"　\" + time_edit_hour + \":\" + time_edit_minutes;\r\n        } else if (param == 3) {\r\n\r\n            var time_edit = time_edit_hour + \":\" + time_edit_minutes;\r\n        } else if (param == 4) {\r\n            var time_edit = time_edit_year + \"-\" + time_edit_month + \"-\" + time_edit_day;\r\n\r\n        } else if (param == 5) {\r\n            var time_edit = time_edit_year + \"/\" + time_edit_month + \"/\" + time_edit_day;\r\n        } else if (param == 6) {\r\n            var time_edit = time_edit_year + \"年\" + time_edit_month + \"月\" + time_edit_day + \"日\";\r\n        }\r\n\r\n        return time_edit;\r\n    },\r\n    compareDate: function (startDate, endDate) {\r\n\r\n        if (new Date(startDate).getTime() <= new Date(endDate).getTime()) {\r\n\r\n            return true;\r\n\r\n        } else {\r\n\r\n            return false;\r\n        }\r\n\r\n    },\r\n    nowJapanDate: function () {\r\n        return new Date(new Date().toLocaleString({ timeZone: 'Asia/Tokyo' }));\r\n    },\r\n    nowJapanDateJapaStyle: function () {\r\n\r\n        var japan_date = this.nowJapanDate();\r\n\r\n        return this.time_edit(japan_date, 6);\r\n\r\n    },\r\n    nowJapanDateInput: function () {\r\n\r\n        var japan_date = this.nowJapanDate();\r\n\r\n        return this.time_edit(japan_date, 4);\r\n\r\n    },\r\n    nowJapanYear: function () {\r\n\r\n        var date_string = new Date().toLocaleString({ timeZone: 'Asia/Tokyo' });\r\n\r\n        var japan_date = new Date(date_string);\r\n\r\n        if (japan_date.getMonth() + 1 <= 3 && japan_date.getDate() <= 31) {\r\n\r\n            return japan_date.getFullYear() - 1;\r\n\r\n        } else  {\r\n\r\n            return japan_date.getFullYear();\r\n\r\n        }\r\n\r\n    },\r\n    JapanYear: function (input_date) {\r\n\r\n        var japan_date = input_date;\r\n\r\n        if (japan_date.getMonth() + 1 <= 3 && japan_date.getDate() <= 31) {\r\n\r\n            return japan_date.getFullYear() - 1;\r\n\r\n        } else {\r\n\r\n            return japan_date.getFullYear();\r\n\r\n        }\r\n\r\n    },\r\n\r\n\r\n}"]}]}